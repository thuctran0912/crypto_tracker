{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "CloudFormation template to deploy a Lambda function for fetching and storing crypto news with daily 6 AM trigger",
    "Parameters": {
      "FinnhubApiKey": {
        "Type": "String",
        "Description": "Finnhub API Key",
        "NoEcho": true
      },
      "S3BucketName": {
        "Type": "String",
        "Description": "Name of the S3 bucket to store news data"
      },
      "FinnhubLayerArn": {
        "Type": "String",
        "Description": "ARN of the Lambda Layer containing the finnhub library"
      },
      "LambdaCodeBucket": {
        "Type": "String",
        "Description": "S3 bucket containing the Lambda function code"
      },
      "LambdaCodeKey": {
        "Type": "String",
        "Description": "S3 key for the Lambda function code zip file"
      }
    },
    "Resources": {
      "LambdaExecutionRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": ["lambda.amazonaws.com"]
                },
                "Action": ["sts:AssumeRole"]
              }
            ]
          },
          "ManagedPolicyArns": [
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          ],
          "Policies": [
            {
              "PolicyName": "S3Access",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "s3:PutObject"
                    ],
                    "Resource": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {"Ref": "S3BucketName"},
                          "/*"
                        ]
                      ]
                    }
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "s3:GetObject"
                    ],
                    "Resource": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {"Ref": "LambdaCodeBucket"},
                          "/",
                          {"Ref": "LambdaCodeKey"}
                        ]
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "LambdaFunction": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "FunctionName": "CryptoNewsLambda",
          "Handler": "index.lambda_handler",
          "Role": {
            "Fn::GetAtt": ["LambdaExecutionRole", "Arn"]
          },
          "Code": {
            "S3Bucket": {"Ref": "LambdaCodeBucket"},
            "S3Key": {"Ref": "LambdaCodeKey"}
          },
          "Runtime": "python3.11",
          "Timeout": 60,
          "MemorySize": 128,
          "Environment": {
            "Variables": {
              "FINNHUB_API_KEY": {"Ref": "FinnhubApiKey"},
              "S3_BUCKET_NAME": {"Ref": "S3BucketName"}
            }
          },
          "Layers": [
            {"Ref": "FinnhubLayerArn"}
          ]
        }
      },
      "LambdaPermission": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "FunctionName": {"Ref": "LambdaFunction"},
          "Action": "lambda:InvokeFunction",
          "Principal": "events.amazonaws.com",
          "SourceArn": {"Fn::GetAtt": ["ScheduledRule", "Arn"]}
        }
      },
      "ScheduledRule": {
        "Type": "AWS::Events::Rule",
        "Properties": {
          "Description": "ScheduledRule for CryptoNewsLambda - Daily at 6 AM UTC",
          "ScheduleExpression": "cron(0 2 * * ? *)",
          "State": "ENABLED",
          "Targets": [{
            "Arn": {"Fn::GetAtt": ["LambdaFunction", "Arn"]},
            "Id": "TargetFunctionV1"
          }]
        }
      }
    },
    "Outputs": {
      "LambdaFunctionArn": {
        "Description": "ARN of the Lambda function",
        "Value": {
          "Fn::GetAtt": ["LambdaFunction", "Arn"]
        }
      }
    }
  }