-- Create table to store processed data from LANDING area
CREATE OR REPLACE TABLE BATCH_DB.LANDING_FINNHUB.FINNHUB_NEWS_PROCESSED (
    DATETIME TIMESTAMP,
    ID NUMBER,
    HEADLINE VARCHAR,
    SOURCE VARCHAR,
    SUMMARY VARCHAR,
    URL VARCHAR
);

-- Create procedure to transform and load data to different schemas 
CREATE OR REPLACE PROCEDURE BATCH_DB.LANDING_FINNHUB.PROCESS_FINNHUB_NEWS()
RETURNS STRING
LANGUAGE SQL
AS
$$
BEGIN
    -- Process data and ingest to FINNHUB_NEWS_PROCESSED
    INSERT INTO BATCH_DB.LANDING_FINNHUB.FINNHUB_NEWS_PROCESSED 
        (DATETIME, ID, HEADLINE, SOURCE, SUMMARY, URL)
    SELECT 
        TO_TIMESTAMP_NTZ(DATETIME) AS DATETIME,
        ID,
        HEADLINE,
        SOURCE,
        SUMMARY,
        URL
    FROM (
        SELECT *,
            ROW_NUMBER() OVER (PARTITION BY HEADLINE ORDER BY DATETIME DESC) AS rn
            FROM BATCH_DB.LANDING_FINNHUB.FINNHUB_NEWS
        WHERE UPPER(SUMMARY) LIKE '%ETH%'
            OR UPPER(SUMMARY) LIKE '%BTC%'
            OR UPPER(SUMMARY) LIKE '%ETHEREUM%'
            OR UPPER(SUMMARY) LIKE '%BITCOIN%'
            OR UPPER(SUMMARY) LIKE '%ETHER%'
        )AS deduplicated_news
        WHERE rn = 1;

    -- Clone to replica
    CREATE OR REPLACE TABLE BATCH_DB.REPLICA_FINNHUB.FINNHUB_NEWS CLONE BATCH_DB.LANDING_FINNHUB.FINNHUB_NEWS_PROCESSED;

    -- Ensure history table exists and merge data
    CREATE TABLE IF NOT EXISTS BATCH_DB.HISTORY_FINNHUB.FINNHUB_NEWS LIKE BATCH_DB.LANDING_FINNHUB.FINNHUB_NEWS_PROCESSED;

    MERGE INTO BATCH_DB.HISTORY_FINNHUB.FINNHUB_NEWS AS target
    USING BATCH_DB.LANDING_FINNHUB.FINNHUB_NEWS_PROCESSED AS source
    ON target.HEADLINE = source.HEADLINE
    WHEN MATCHED THEN
        UPDATE SET
            target.DATETIME = source.DATETIME,
            target.ID = source.ID,
            target.SOURCE = source.SOURCE,
            target.SUMMARY = source.SUMMARY,
            target.URL = source.URL
    WHEN NOT MATCHED THEN
        INSERT (DATETIME, ID, HEADLINE, SOURCE, SUMMARY, URL)
        VALUES (source.DATETIME, source.ID, source.HEADLINE, source.SOURCE, source.SUMMARY, source.URL);

    -- Truncate LANDING tables
    TRUNCATE TABLE BATCH_DB.LANDING_FINNHUB.FINNHUB_NEWS_PROCESSED;
    TRUNCATE TABLE BATCH_DB.LANDING_FINNHUB.FINNHUB_NEWS;

    RETURN 'FINNHUB_NEWS processing completed successfully';
END;
$$;


CREATE OR REPLACE TASK BATCH_DB.LANDING_FINNHUB.PROCESS_FINNHUB_NEWS_DAILY
	WAREHOUSE=COMPUTE_WH
	SCHEDULE='USING CRON 0 6 * * * Europe/Helsinki'
	AS 
    CALL BATCH_DB.LANDING_FINNHUB.PROCESS_FINNHUB_NEWS();
